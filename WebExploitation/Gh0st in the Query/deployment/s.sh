#!/bin/bash
sudo apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt install ufw mysql-server php-fpm php-mysql nginx unzip -y
sudo service nginx start

sudo mysql_secure_installation <<EOF

y
mysqlR00tP4swd
mysqlR00tP4swd
y
y
y
y
EOF

sudo systemctl start mysql
sudo systemctl enable mysql

sudo mysql -u root -pmysqlR00tP4swd <<EOF
CREATE DATABASE xmas;
CREATE USER 'user'@'localhost' IDENTIFIED BY 'mysqlR00tP4swd';
GRANT ALL PRIVILEGES ON xmas.* TO 'user'@'localhost';
FLUSH PRIVILEGES;
EOF

rm -rf /var/www/html
mkdir /var/www/html

cd /var/www/html

sudo tee /var/www/html/index.php &>/dev/null <<EOF
<html><head><style>
    body {
        font-family: Arial, sans-serif;
        background: url('bg.svg') no-repeat center center fixed;
        background-size: cover;
        color: #ff4d4d;
        text-align: center;
        margin: 0;
        padding: 0;
    }
    h1 {
        color: #ff4d4d;
        text-shadow: 2px 2px 5px #000;
        font-size: 3em;
    }
    form {
        margin: 20px;
        padding: 10px;
        display: inline-block;
        background: rgba(255, 255, 255, 0.8);
        border-radius: 10px;
    }
    input[type='text'] {
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 1em;
        width: 200px;
    }
    button {
        padding: 10px 20px;
        background: #28a745;
        border: none;
        border-radius: 5px;
        color: white;
        font-size: 1em;
        cursor: pointer;
    }
    button:hover {
        background: #218838;
    }
    ul {
        list-style-type: none;
        padding: 0;
    }
    li {
        margin: 10px 0;
        padding: 10px;
        background: rgba(0, 0, 0, 0.7);
        border-radius: 5px;
        display: inline-block;
        text-align: left;
    }
    </style></head><body>
    <h1>Christmas Gift Search</h1>
<form method='GET'>
<input type='text' name='search' placeholder='Search for gifts'>
<button type='submit'>Search</button>
</form>

<?php
\$conn = new mysqli("localhost", "user", "mysqlR00tP4swd", "xmas");

// Check connection
if (\$conn->connect_error) {
    die("Connection failed: " . \$conn->connect_error);
}

if (isset(\$_GET['search'])) {
    \$search = \$_GET['search'];

    \$query = "SELECT * FROM presents WHERE gift_name LIKE '%\$search%'";
    \$result = \$conn->query(\$query);

    if (\$result->num_rows > 0) {
        echo "<h2>Results:</h2><ul>";
        while (\$row = \$result->fetch_assoc()) {
            echo "<li><strong>Gift:</strong> " . \$row['gift_name'] . "<br><strong>From:</strong> " . \$row['giver'] . "</li>";
        }
        echo "</ul>";
    } else {
        echo "<p>No gifts found!</p>";
    }
}
\$conn->close();
?>
EOF

sudo tee /tmp/christmas_ctf.sql &>/dev/null <<EOF
USE xmas;

-- Create table for gifts
CREATE TABLE presents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    gift_name VARCHAR(255),
    giver VARCHAR(255)
);

-- Insert dummy data into presents table
INSERT INTO presents (gift_name, giver) VALUES
('Toy Train', 'Santa Claus'),
('Dollhouse', 'Mrs. Claus'),
('Chocolate Box', 'Elf Buddy'),
('Skateboard', 'Rudolph'),
('Magic Wand', 'Frosty the Snowman');

-- Create a separate table for the flag
CREATE TABLE fl444g5kewl (
    id INT AUTO_INCREMENT PRIMARY KEY,
    flag VARCHAR(255)
);

-- Insert the flag into the flags table
INSERT INTO fl444g5kewl (flag) VALUES ('cyberQuest{flsssagtestt}');
EOF

mysql -u root -pmysqlR00tP4swd xmas < /tmp/christmas_ctf.sql
rm /tmp/christmas_ctf.sql

sudo tee /etc/nginx/nginx.conf &>/dev/null <<EOF
user www-data;
events {
    worker_connections  1024;
}
http {
    server {
        listen 80;

        root /var/www/html;
        index index.html index.htm index.php;
        location / {
             try_files \$uri \$uri/ /index.php\$is_args\$args;
        }

        location ~ \.php$ {
             include snippets/fastcgi-php.conf;
             fastcgi_pass unix:/run/php/php8.3-fpm.sock;
	    }

        location ~ .svg$ {
             add_header Content-Type image/svg+xml;
        }
            
    }
    # Configuration for port 9090
    # Health check
    server {
        listen 9090;
        default_type application/json;
        location / {
            return 200 '{"status":"ok","message": "This route is used to health check the dedicated instance. Not part of challenge."}';
        }
    }
}
EOF

sudo service nginx restart

sudo ufw allow 80
sudo ufw allow 9090
sudo ufw enable




update flags set flag = 'cyberQuest{flsssagtestt}' where id = 1';
