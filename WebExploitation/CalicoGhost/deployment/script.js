// Impressive. You have found the final fragment. 
// With this, you can access my network and help me locate 
// The Pugilist's server farm, which I suspect is hidden 
// beneath a very large dog park. 
// The fate of the internet (and my afternoon nap) rests in your paws.

// The full flag is: cyberQuest{c411c0.6h057_2f4f27c8c6b299e5584b433948255954}

console.log("The network is open. The Calico Ghost is back online. Now, find me The Pugilist. -Benji");


// --- Pugilist Threat Logic ---

document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('pugilist-modal');
    const messageEl = document.getElementById('pugilist-message');
    const closeBtn = document.getElementById('modal-close-btn');
    const terminalBody = document.getElementById('terminal-body');

    let threatLevel = 0;

    const threats = [
        "GRRR... So, the Calico Ghost has a new little helper. Don't meddle in things you don't understand. This is your only warning.",
        "You're persistent, I'll give you that. But all you've found is a dead end. Turn back now, or I'll corrupt more than just your files. WOOF!",
        "ENOUGH! You and that flea-bitten cat have gone too far! My DDoS (Distributed Denial-of-Slobber) attack is imminent! The web will be mine!"
    ];

    const showThreat = (level) => {
        if (level < threats.length) {
            messageEl.textContent = threats[level];
            modal.style.display = 'flex';
        }
    };

    const closeThreat = () => {
        modal.style.display = 'none';
        threatLevel++;
        // If the second threat was just closed, show the final one.
        if (threatLevel === 2) {
            setTimeout(() => showThreat(threatLevel), 500);
        }
    };

    closeBtn.addEventListener('click', closeThreat);

    // Threat 1: Appears after a delay, simulating finding the first flag.
    setTimeout(() => {
        showThreat(threatLevel);
    }, 4000);

    // Threat 2: Appears when the user clicks the terminal, simulating finding the second flag.
    terminalBody.addEventListener('click', () => {
        if (threatLevel === 1) {
            showThreat(threatLevel);
        }
    }, { once: true }); // This event listener will only fire once.
});
